cmake_minimum_required(VERSION 3.16.3)
project(testHOG)
set(CMAKE_CXX_STANDARD 20)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(EXECUTABLE_OUTPUT_PATH ${testHOG_SOURCE_DIR}/bin)

include_directories(./include)
include_directories(./malloc_count)

set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -O3 -DDEBUG")

add_library(COMMON_LIBRARY ./src/Aho-Cora.cpp ./src/EHOG.cpp ./src/Common-Trie.cpp ./src/timer.cpp ./src/DatasetGenerator.cpp ./malloc_count/malloc_count.c ./malloc_count/stack_count.c)
target_link_libraries(COMMON_LIBRARY ${CMAKE_DL_LIBS})

add_library(COMMON_LIBRARY_TIME ./src/Aho-Cora.cpp ./src/EHOG.cpp ./src/Common-Trie.cpp ./src/timer.cpp ./src/DatasetGenerator.cpp)

# change according to algorithm being tested
add_executable(TEST ./src/HOG-SSP.cpp ./tests/validateHOG.cpp)
target_compile_definitions(TEST PUBLIC SSP)
target_link_libraries(TEST PUBLIC COMMON_LIBRARY)

add_executable(SSP ./src/HOG-SSP.cpp ./src/HOG-BASE.cpp ./tests/testHOG.cpp)
target_compile_definitions(SSP PUBLIC SSP MERGED)
target_link_libraries(SSP PUBLIC COMMON_LIBRARY_TIME)

# add_executable(AHO ./src/HOG-SSP.cpp ./tests/testHOG.cpp)
# target_compile_definitions(AHO PUBLIC CONSTRUCT_AHO)
# target_link_libraries(AHO PUBLIC COMMON_LIBRARY)
# add_executable(EHOG ./src/HOG-SSP.cpp ./tests/testHOG.cpp)
# target_compile_definitions(EHOG PUBLIC CONSTRUCT_EHOG)
# target_link_libraries(EHOG PUBLIC COMMON_LIBRARY)

# add_executable(SSP ./src/HOG-SSP.cpp ./tests/testHOG.cpp)
# target_compile_definitions(SSP PUBLIC SSP)
# target_link_libraries(SSP PUBLIC COMMON_LIBRARY)
# add_executable(SK ./src/HOG-SK.cpp ./tests/testHOG.cpp)
# target_compile_definitions(SK PUBLIC SK)
# target_link_libraries(SK PUBLIC COMMON_LIBRARY)
# add_executable(SP ./src/HOG-SP.cpp ./tests/testHOG.cpp)
# target_compile_definitions(SP PUBLIC SP)
# target_link_libraries(SP PUBLIC COMMON_LIBRARY)
# add_executable(SSPEHOG ./src/HOG-SSP.cpp ./tests/testHOG.cpp)
# target_compile_definitions(SSPEHOG PUBLIC SSP VIA_EHOG)
# target_link_libraries(SSPEHOG PUBLIC COMMON_LIBRARY)
# add_executable(SKEHOG ./src/HOG-SK.cpp ./tests/testHOG.cpp)
# target_compile_definitions(SKEHOG PUBLIC SK VIA_EHOG)
# target_link_libraries(SKEHOG PUBLIC COMMON_LIBRARY)
# add_executable(SPEHOG ./src/HOG-SP.cpp ./tests/testHOG.cpp)
# target_compile_definitions(SPEHOG PUBLIC SP VIA_EHOG)
# target_link_libraries(SPEHOG PUBLIC COMMON_LIBRARY)

# add_executable(BCER ./src/HOG-BCER.cpp ./tests/testHOG.cpp)
# target_compile_definitions(BCER PUBLIC BCER)
# target_link_libraries(BCER PUBLIC COMMON_LIBRARY)
# add_executable(EC ./src/HOG-EC.cpp ./tests/testHOG.cpp)
# target_compile_definitions(EC PUBLIC EC)
# target_link_libraries(EC PUBLIC COMMON_LIBRARY)
# add_executable(BCEREHOG ./src/HOG-BCER.cpp ./tests/testHOG.cpp)
# target_compile_definitions(BCEREHOG PUBLIC BCER VIA_EHOG)
# target_link_libraries(BCEREHOG PUBLIC COMMON_LIBRARY)
# add_executable(ECEHOG ./src/HOG-EC.cpp ./tests/testHOG.cpp)
# target_compile_definitions(ECEHOG PUBLIC EC VIA_EHOG)
# target_link_libraries(ECEHOG PUBLIC COMMON_LIBRARY)

